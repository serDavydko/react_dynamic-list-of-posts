{"version":3,"sources":["User.js","Comment.js","CommentList.js","Post.js","PostList.js","App.js","index.js"],"names":["User","_ref","user","react_default","a","createElement","className","name","email","address","city","street","Comment","comment","body","CommentList","state","isHidden","showComments","_this","setState","prevState","type","onClick","this","props","comments","map","src_Comment","React","Component","Post","post","src_User","title","src_CommentList","PostList","posts","filter","placeholder","onChange","src_Post","ADRESS","getData","Object","asyncToGenerator","regenerator_default","mark","_callee","link","response","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","arguments","App","postsCopy","isLoaded","showTable","event","dataToFilter","target","value","toConsumableArray","item","text","toLowerCase","search","concat","users","postsData","objectSpread","find","id","userId","postId","_this$state","src_PostList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7d205dd5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <div className=\"User-head\">\n    <span>\n      {user.name}\n      /\n    </span>\n    <span>\n      {user.email}\n      /\n    </span>\n    <span>\n      {user.address.city}\n      /\n    </span>\n    <span>\n      {user.address.street}\n    </span>\n  </div>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    address: PropTypes.shape(\n      {\n        city: PropTypes.string,\n        street: PropTypes.string,\n\n      }\n    ).isRequired,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ comment }) => (\n  <div>\n    <div className=\"title-group\">\n      <span className=\"CommentList__user\">\n        {comment.email}\n        :\n      </span>\n      <span className=\"title\">\n\n        {comment.name}\n      </span>\n    </div>\n    <span>\n      {comment.body}\n    </span>\n  </div>\n);\n\nComment.propTypes = {\n  comment: PropTypes.shape(\n    {\n      email: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      body: PropTypes.string.isRequired,\n    }\n  ).isRequired,\n\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from './Comment';\n\nclass CommentList extends React.Component {\n  state = {\n    isHidden: true,\n  }\n\n  showComments = () => {\n    this.setState(prevState => ({\n      isHidden: !prevState.isHidden,\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"CommentList__items\">\n        <button type=\"button\" onClick={this.showComments}>\n          {this.state.isHidden ? 'Show Comment' : 'Hide comments'}\n        </button>\n        {this.state.isHidden\n          ? <span> </span>\n          : this.props.comments.map(comment => (\n            <Comment comment={comment} />\n          ))}\n      </div>\n    );\n  }\n}\n\nCommentList.propTypes = {\n  comments: PropTypes.shape({\n    email: PropTypes.string,\n    name: PropTypes.string,\n    body: PropTypes.string,\n    map: PropTypes.func,\n  }).isRequired,\n};\n\nexport default CommentList;\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\nimport CommentList from './CommentList';\n\nconst Post = ({ post }) => (\n  <article className=\"PostList__items\">\n    <div className=\"title-group\">\n      <span className=\"PostList__user\">\n        <User user={post.user} />\n      </span>\n      <span className=\"title\">\n        {post.title}\n      </span>\n    </div>\n    <span>\n      {post.body}\n    </span>\n    <span>\n      <CommentList comments={post.comments} />\n    </span>\n  </article>\n\n);\n\nPost.propTypes = {\n  post: PropTypes.shape(\n    {\n      user: PropTypes.string.isRequired,\n      comments: PropTypes.array.isRequired,\n      title: PropTypes.object.isRequired,\n      body: PropTypes.string.isRequired,\n    }\n  ).isRequired,\n\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Post from './Post';\n\nconst PostList = ({ posts, filter }) => (\n  <section>\n    <div className=\"PostList__title\">\n      <span> List of posts </span>\n      <input\n        type=\"search\"\n        placeholder=\"filter by header of text\"\n        onChange={filter}\n        className=\"filter-input\"\n      />\n    </div>\n    {posts.map(post => (\n      <Post post={post} />\n    ))}\n  </section>\n);\n\nPostList.propTypes = {\n  posts: PropTypes.shape({\n    map: PropTypes.func,\n  }).isRequired,\n  filter: PropTypes.func,\n};\n\nexport default PostList;\n","import React from 'react';\nimport './App.css';\n\nimport PostList from './PostList';\n\nconst ADRESS = 'https://jsonplaceholder.typicode.com/';\n\nconst getData = async(link) => {\n  const response = await fetch(link);\n  const posts = await response.json();\n\n  return posts;\n};\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    postsCopy: [],\n    isLoaded: false,\n  }\n\n  async componentDidMount() {\n    const posts = await getData(ADRESS.concat('posts'));\n    const users = await getData(ADRESS.concat('users'));\n    const comments = await getData(ADRESS.concat('comments'));\n\n    const postsData = posts.map(post => ({\n      ...post,\n      user: users.find(user => user.id === post.userId),\n      comments: comments.filter(comment => post.id === comment.postId),\n    }\n    ));\n\n    this.setState({\n      posts: [...postsData],\n      postsCopy: [...postsData],\n    });\n  }\n\n  showTable = () => {\n    this.setState({\n      isLoaded: true,\n    });\n  }\n\n  filter = (event) => {\n    const dataToFilter = event.target.value;\n\n    this.setState((prevState) => {\n      const updatedList = [...prevState.posts]\n        .filter((item) => {\n          const BasicArray = item.title + item.text;\n          return BasicArray.toLowerCase().search(\n            dataToFilter.toLowerCase()\n          ) !== -1;\n        });\n\n      return { postsCopy: updatedList };\n    });\n  }\n\n  render() {\n    const { postsCopy, isLoaded } = this.state;\n    return (\n      <div className=\"App\">\n        {isLoaded\n          ? <PostList posts={postsCopy} filter={this.filter} />\n          : <button type=\"button\" onClick={this.showTable}>Show data</button>}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}